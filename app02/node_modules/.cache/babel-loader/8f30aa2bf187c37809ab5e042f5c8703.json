{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  tasks: []\n};\nexport var allTasksSlice = createSlice({\n  name: 'allTasks',\n  initialState: initialState,\n  reducers: {\n    addTask: function addTask(state, action) {\n      state.tasks.push(action.payload);\n    },\n    markTask: function markTask(state, action) {\n      state.tasks.map(function (task) {\n        return task.id === action.payload.id ? task.isSelected = !task.isSelected : task;\n      });\n    },\n    deleteTask: function deleteTask(state, action) {\n      console.log('deleting');\n      state.tasks = state.tasks.filter(function (task) {\n        return task.id !== action.payload.id;\n      });\n    }\n  }\n});\nvar _allTasksSlice$action = allTasksSlice.actions,\n  addTask = _allTasksSlice$action.addTask,\n  markTask = _allTasksSlice$action.markTask,\n  deleteTask = _allTasksSlice$action.deleteTask;\nexport { addTask, markTask, deleteTask };\nexport var selectAllTasks = function selectAllTasks(state) {\n  return state.allTasks.tasks;\n};\nexport default allTasksSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","allTasksSlice","name","reducers","addTask","state","action","push","payload","markTask","map","task","id","isSelected","deleteTask","console","log","filter","_allTasksSlice$action","actions","selectAllTasks","allTasks","reducer"],"sources":["/home/shasika/Documents/Personal Workspace/app02/src/features/allTasks/allTasksSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    tasks: []\n};\n\nexport const allTasksSlice = createSlice({\n    name: 'allTasks',\n    initialState,\n    reducers: {\n        addTask: (state, action) => {\n            state.tasks.push(action.payload);\n        },\n        markTask: (state, action) => {\n            state.tasks.map(task => task.id === action.payload.id ? task.isSelected = !task.isSelected : task);\n        },\n        deleteTask: (state, action) => {\n            console.log('deleting')\n            state.tasks = state.tasks.filter(task => task.id !== action.payload.id);\n        }\n    }\n})\n\nexport const { addTask, markTask, deleteTask } = allTasksSlice.actions;\n\nexport const selectAllTasks = (state) => state.allTasks.tasks;\n\nexport default allTasksSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,IAAMC,aAAa,GAAGH,WAAW,CAAC;EACrCI,IAAI,EAAE,UAAU;EAChBH,YAAY,EAAZA,YAAY;EACZI,QAAQ,EAAE;IACNC,OAAO,EAAE,SAAAA,QAACC,KAAK,EAAEC,MAAM,EAAK;MACxBD,KAAK,CAACL,KAAK,CAACO,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACpC,CAAC;IACDC,QAAQ,EAAE,SAAAA,SAACJ,KAAK,EAAEC,MAAM,EAAK;MACzBD,KAAK,CAACL,KAAK,CAACU,GAAG,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE,GAAGD,IAAI,CAACE,UAAU,GAAG,CAACF,IAAI,CAACE,UAAU,GAAGF,IAAI;MAAA,EAAC;IACtG,CAAC;IACDG,UAAU,EAAE,SAAAA,WAACT,KAAK,EAAEC,MAAM,EAAK;MAC3BS,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBX,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACiB,MAAM,CAAC,UAAAN,IAAI;QAAA,OAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACE,OAAO,CAACI,EAAE;MAAA,EAAC;IAC3E;EACJ;AACJ,CAAC,CAAC;AAAA,IAAAM,qBAAA,GAE+CjB,aAAa,CAACkB,OAAO;EAAvDf,OAAO,GAAAc,qBAAA,CAAPd,OAAO;EAAEK,QAAQ,GAAAS,qBAAA,CAART,QAAQ;EAAEK,UAAU,GAAAI,qBAAA,CAAVJ,UAAU;AAAA,SAAAV,OAAA,EAAAK,QAAA,EAAAK,UAAA;AAE5C,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAcA,CAAIf,KAAK;EAAA,OAAKA,KAAK,CAACgB,QAAQ,CAACrB,KAAK;AAAA;AAE7D,eAAeC,aAAa,CAACqB,OAAO"},"metadata":{},"sourceType":"module"}